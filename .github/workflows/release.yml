# GitHub Actions Workflow for releasing the IntelliJ plugin to GitHub Releases
# Triggers on semver tag push (e.g., v1.0.0) and creates a GitHub release with cliff-generated release notes

name: Release

on:
  push:
    tags: [ "v*" ]

jobs:
  # Build the plugin and create artifacts
  build:
    name: Build Plugin
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      filename: ${{ steps.artifact.outputs.filename }}
    steps:
      # Free GitHub Actions Environment Disk Space
      - name: Maximize Build Space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v2

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 11

      # Set environment variables
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          NAME="$(echo "$PROPERTIES" | grep "^pluginName:" | cut -f2- -d ' ')"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT

      # Build plugin
      - name: Build Plugin
        run: ./gradlew buildPlugin

      # Prepare plugin archive content for creating artifact
      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=`ls *.zip`
          echo "filename=${FILENAME}" >> $GITHUB_OUTPUT

      # Store built plugin as an artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-artifact
          path: ./build/distributions/*.zip
          retention-days: 1

  # Create GitHub release with cliff-generated release notes
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Generate Release Notes using git-cliff
      - name: Generate Release Notes
        id: changelog
        uses: orhun/git-cliff-action@v4
        with:
          config: .github/cliff.toml
          args: --latest --strip header

      # Download plugin artifact
      - name: Download Plugin Artifact
        uses: actions/download-artifact@v4
        with:
          name: plugin-artifact

      # Create GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.changelog.outputs.content }}
          files: "*.zip"
